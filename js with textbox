
// Generated by CoffeeScript 1.6.1
(function() {

  jQuery(document).ready(function() {
    var analyze;

//retrieve text to be analysed;

    analyze = function(data) {
      var newlineRegEx;
      newlineRegEx = new RegExp('[\r\n|\r|\n]', "g");

//remove punctuation from text and change it to lower case;

      data = data.replace(/[\.,-\/?#!$%\^&\*;:{}=\-_`~()\r\n]/g, "").replace(newlineRegEx, " ").toLowerCase().replace(/\s{2,}/g, " ");
      console.log(data);

//compare text against the most common words in English list. if a match is found, remove that word;

      return jQuery.get('common.txt', function(words) {
        var count, counts, countsArray, pair, secondWordRegEx, word, wordRegEx, _i, _j, _k, _len, _len1, _len2, _ref, _results;
        words = words.split(" ");
        console.log(words);
        alert(words[0] + words[1]);
        for (_i = 0, _len = words.length; _i < _len; _i++) {
          word = words[_i];
          wordRegEx = new RegExp(" " + word + " ", "g");
          secondWordRegEx = new RegExp("\n"+word, "g");
          console.log(word);
          data = data.replace(wordRegEx, " ").replace(secondWordRegEx, " ");
        }
        console.log(data);

//count the occurrences of the remaining words in the text;

        data = data.split(" ");
        console.log(data);
        counts = {};
        for (_j = 0, _len1 = data.length; _j < _len1; _j++) {
          word = data[_j];
          console.log(word);
          if (counts[word] != null) {
            counts[word]++;
          } else {
            counts[word] = 1;
          }
        }
        console.log(counts);

//put each word and its number of occurrences side-by-side in an array;

        countsArray = [];
        for (word in counts) {
          count = counts[word];
          countsArray.push([word, count]);
        }
        console.log(countsArray);

//sort the array alphabetically;

        console.log(countsArray.sort(function(first, second) {
          return second[1] - first[1];
        }));

//select only 10% of the words in the array;

        _ref = countsArray.slice(0, countsArray.length * .1);
        _results = [];
        for (_k = 0, _len2 = _ref.length; _k < _len2; _k++) {
          pair = _ref[_k];
          console.log(pair[0] + ": " + pair[1]);

//print out the results in a table;

          _results.push(jQuery("#results").append("<tr><td>" + pair[0] + "</td><td>" + pair[1] + "</td></tr>"));
        }
        return _results;
      });
    };

//when the user clicks the submit button, pass pasted text to algorithm to analyse;

    return $("#submit").click(function() {
      analyze($("#text").val());
      return false;
    });
  });

}).call(this);
